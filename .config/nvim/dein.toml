# plugins {{{1

[[plugins]]
repo = 'Shougo/dein.vim'

[[plugins]]
repo = 'Shougo/vimproc.vim'
hook_post_update = '''
    if dein#util#_is_windows()
        let cmd = 'tools\\update-dll-mingw'
    elseif dein#util#_is_cygwin()
        let cmd = 'make -f make_cygwin.mak'
    elseif executable('gmake')
        let cmd = 'gmake'
    else
        let cmd = 'make'
    endif
    let g:dein#plugin.build = cmd
'''

[[plugins]]
repo = 'itchyny/lightline.vim'
hook_add = '''
    let g:lightline = {
    \   'colorscheme': 'wombat',
    \   'separator': { 'left': "\ue0b0", 'right': "\ue0b2" },
    \   'subseparator': { 'left': "\ue0b1", 'right': "\ue0b3" }
    \ }
'''

[[plugins]]
repo = 'tpope/vim-speeddating'

[[plugins]]
repo = 'dbeniamine/todo.txt-vim'

[[plugins]]
repo = 'vim-scripts/vcscommand.vim'
#repo = 'fourjay/vim-vcscommand'

[[plugins]]
repo = 'AndrewRadev/linediff.vim'
hook_add = '''
    let g:linediff_first_buffer_command = 'leftabove new'
    let g:linediff_second_buffer_command = 'rightbelow vertical new'
    autocmd User LinediffBufferReady nnoremap <buffer> q :LinediffReset<cr>
    command! -range Ld call linediff#Linediff(<line1>, <line2>, {})
'''

[[plugins]]
repo = "airblade/vim-gitgutter"

[[plugins]]
repo = "tpope/vim-fugitive"

[[plugins]]
repo = "junegunn/vim-easy-align"
hook_add = '''
    " Start interactive EasyAlign in visual mode (e.g. vip<Enter>)
    vmap <Enter> <Plug>(EasyAlign)
    " Start interactive EasyAlign for a motion/text object (e.g. gaip)
    nmap ga <Plug>(EasyAlign)
'''

[[plugins]]
repo = "prabirshrestha/vim-lsp"
hook_add = '''
    let g:lsp_diagnostics_enabled = 1
    let g:lsp_signs_enabled = 1
    let g:lsp_diagnostics_echo_cursor = 1
    let g:lsp_diagnostics_virtual_text_enabled = 0
'''

[[plugins]]
repo = "mattn/vim-lsp-settings"

# colors {{{1

[[plugins]]
repo = 'w0ng/vim-hybrid'
hook_add = '''
set background=dark
au MyAutoCmd VimEnter * nested colorscheme hybrid
'''

# end of file {{{1
# vim:ft=toml:et:nowrap:fdm=marker
