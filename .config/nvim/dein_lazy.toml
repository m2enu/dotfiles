[[plugins]]
repo = 'Shougo/deoplete.nvim'
if = 'has("nvim")'
on_event = 'InsertCharPre'
hook_source = '''
    let g:deoplete#enable_at_startup = 1
    call deoplete#custom#option('auto_complete_delay'       , 0)
    call deoplete#custom#option('auto_complete_start_length', 1)
    call deoplete#custom#option('smart_case'                , v:true)
    inoremap <expr><tab> pumvisible() ? "\<C-n>" :
        \ neosnippet#expandable_or_jumpable() ?
        \   "\<Plug>(neosnippet_expand_or_jump)" : "\<tab>"
'''
on_i = 1

[[plugins]]
repo = 'Shougo/neosnippet-snippets'

[[plugins]]
repo = 'Shougo/neosnippet'
hook_source = '''
    imap <C-k> <Plug>(neosnippet_expand_or_jump)
    smap <C-k> <Plug>(neosnippet_expand_or_jump)
    xmap <C-k> <Plug>(neosnippet_expand_target)
    if has('conceal')
        set conceallevel=2 concealcursor=niv
    endif
'''
depends = ['neosnippet-snippets']
on_i = 1
on_ft = ['snippet']

[[plugins]]
repo = 'Shougo/denite.nvim'
if = 'has("nvim")'
on_cmd = 'Denite'
hook_source = '''
    call denite#custom#option('default', 'prompt', '>')
    call denite#custom#option('default', 'direction', 'top')
'''

[[plugins]]
repo = 'OrangeT/vim-csharp'
on_ft = ['cs']

[[plugins]]
repo = 'hachibeeDI/vim-vbnet'
on_ft = ['vbnet']

[[plugins]]
repo = 'cespare/vim-toml'
on_ft = ['toml']

[[plugins]]
repo = 'leshill/vim-json'
on_ft = ['json']

[[plugins]]
repo = 'zchee/deoplete-jedi'
on_i = 1
on_ft = ['python']

[[plugins]]
repo = 'aklt/plantuml-syntax'
on_ft = ['plantuml']
hook_source = '''
    let g:plantuml_executable_script = "~/bin/plantuml_svg"
'''

[[plugins]]
repo = 'plasticboy/vim-markdown'
on_ft = ['markdown']
hook_source = '''
    let g:vim_markdown_folding_disabled = 1
'''

# end of file {{{1
# vim:ft=toml:et:nowrap:fdm=marker
